{
  "permissions": {
    "allow": [
      "Bash(mix test)",
      "Bash(mix deps.get:*)",
      "Bash(elixir:*)",
      "WebFetch(domain:github.com)",
      "Bash(git add:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(mix compile)",
      "Bash(mix deps.update:*)",
      "Bash(mix compile:*)",
      "Bash(git commit:*)",
      "Bash(mix test:*)",
      "Bash(git push:*)",
      "Bash(git tag:*)",
      "Bash(gh release create:*)",
      "Bash(--title \"v2.0.0 - マルチドライバー対応\" )",
      "Bash(--notes-file RELEASE_NOTES_v2.0.0.md )",
      "Bash(--target master)",
      "Bash(mv:*)",
      "WebFetch(domain:hex.pm)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(mix clean:*)",
      "Bash(mix run:*)",
      "Bash(ls:*)",
      "Bash(# 設定ガイドをconfigurationへ移動\nmv guides/*_configuration.md docs/guides/configuration/\n\n# 機能ガイドをfeaturesへ移動\nmv guides/streaming_guide.md docs/guides/features/\nmv guides/migration_guide.md docs/guides/features/\n\n# 使用例をexamplesへ移動\nmv guides/YESQL_NESTED_MODULE_EXAMPLE.md docs/guides/examples/nested_module_example.md\nmv guides/DUCKDB_PARAMETER_LIMITATION.md docs/guides/features/duckdb_parameter_support.md\n\n# チェックリストを開発者向けへ\nmv guides/production_checklist.md docs/development/\n\n# 内部仕様書を移動\nmv SystemConfiguration.md docs/development/internal/system_configuration_v1.md\nmv NewSystemConfiguration.md docs/development/internal/system_configuration_v2.md\nmv ToDo.md docs/development/internal/\n\n# 分析文書を移動\nmv analysis/* docs/analysis/\n\n# トラブルシューティングを移動\nmv troubleshooting/* docs/troubleshooting/\n\n# 空ディレクトリを削除\nrmdir guides analysis troubleshooting)",
      "Bash(iex:*)",
      "Bash(mix deps.compile:*)",
      "WebFetch(domain:hexdocs.pm)",
      "Bash(find:*)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_column_test.exs)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_column_test.exs --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs:61 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs:66 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs --only duckdb)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs:65 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs:90 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs:94 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs --formatter Elixir.ExUnit.CLIFormatter)",
      "Bash(mix deps:*)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs --max-cases 1)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs:59 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs:59 --no-compile)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs --no-compile)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs:58 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_streaming_test.exs --only streaming)",
      "Bash(grep:*)",
      "Bash(od:*)",
      "Bash(cat:*)",
      "Bash(git pull:*)",
      "Bash(for file in test/postgresql_streaming_test.exs test/driver_cast_syntax_test.exs test/batch_test.exs test/driver_factory_test.exs test/driver_test.exs test/sqlite_test.exs)",
      "Bash(do)",
      "Bash(sed:*)",
      "Bash(done)",
      "Bash(CI=true mix test --exclude duckdb)",
      "Bash(export CI=true)",
      "Bash(git restore:*)",
      "Bash(mix dialyzer:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:api.github.com)",
      "Bash(MIX_ENV=bench mix run benchmarks/tokenizer_benchmark.exs)",
      "Bash(DUCKDB_TEST=true mix test test/duckdb_test.exs test/driver_test.exs --only duckdb)",
      "Bash(DUCKDB_TEST=true mix test test/driver_test.exs:113 --trace)",
      "Bash(DUCKDB_TEST=true mix test test/driver_test.exs:113 --include duckdb --trace)",
      "Bash(mix format)",
      "Bash(export DUCKDB_TEST=true)",
      "Bash(gh api:*)",
      "Bash(./test_all_drivers.exs)",
      "Bash(mix yesql.params:*)",
      "Bash(MIX_ENV=test mix test.yesql.params --test)",
      "Bash(YESQL_TOKENIZER=nimble mix test test/unit/driver_parameter_test.exs --only tokenizer_dependent)",
      "Bash(YESQL_TOKENIZER=default mix test test/unit/driver_parameter_test.exs --only tokenizer_dependent)",
      "Bash(make:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose:*)",
      "Bash(docker exec:*)",
      "Bash(FULL_TEST=true mix test test/postgresql_test.exs --only test:\"ENUM型のサポート\")",
      "Bash(FULL_TEST=true POSTGRES_HOST=localhost mix test test/postgresql_test.exs:170 --trace)",
      "Bash(FULL_TEST=true POSTGRES_HOST=localhost mix test test/postgresql_test.exs:170)",
      "Bash(export FULL_TEST=true)",
      "Bash(export POSTGRES_HOST=localhost)",
      "Bash(FULL_TEST=true POSTGRES_HOST=localhost mix test test/postgresql_test.exs --include integration)",
      "Bash(FULL_TEST=true POSTGRES_HOST=localhost mix test test/postgresql_test.exs:132)",
      "Bash(SETUP_DB_WITH_ECTO=true FULL_TEST=true POSTGRES_HOST=localhost mix test test/test_helper.exs)",
      "Bash(MIX_ENV=test mix yesql.test.setup postgres)",
      "Bash(MIX_ENV=test mix compile)",
      "Bash(POSTGRES_HOST=localhost MIX_ENV=test mix yesql.test.setup postgres)",
      "Bash(POSTGRES_HOST=localhost MIX_ENV=test mix yesql.test.reset postgres)",
      "Bash(POSTGRES_HOST=localhost MIX_ENV=test mix do ecto.drop --repo Yesql.TestRepo.Postgres, ecto.create --repo Yesql.TestRepo.Postgres, ecto.migrate --repo Yesql.TestRepo.Postgres)",
      "Bash(POSTGRES_HOST=localhost MIX_ENV=test mix ecto.reset.yesql postgres)",
      "Bash(POSTGRES_HOST=localhost MIX_ENV=test mix ecto.drop --repo Yesql.TestRepo.Postgres --force)",
      "Bash(POSTGRES_HOST=localhost FULL_TEST=true mix test test/postgresql_test.exs --only test:\"JSONB型のサポート\")",
      "Bash(POSTGRES_HOST=localhost FULL_TEST=true mix test test/postgresql_test.exs:19)",
      "Bash(MYSQL_TEST=true make test-mysql)",
      "Bash(MIX_ENV=test mix test test/driver_cast_syntax_test.exs:81 --include postgres)",
      "Bash(MIX_ENV=test mix test test/batch_test.exs:217)",
      "Bash(MIX_ENV=test mix test test/batch_test.exs:64 test/batch_test.exs:90 test/batch_test.exs:115 test/batch_test.exs:217)",
      "Bash(MIX_ENV=test mix test test/batch_test.exs:185 --trace)",
      "Bash(MIX_ENV=test mix test test/batch_test.exs:45 --trace)",
      "Bash(mix ecto.reset:*)",
      "Bash(MIX_ENV=test mix ecto.reset.yesql)",
      "Bash(MIX_ENV=test mix yesql.test.setup)",
      "Bash(MIX_ENV=test mix ecto.drop.yesql)",
      "Bash(SQLITE_TEST=true mix test test/sqlite_test.exs)",
      "Bash(source:*)",
      "Bash(MYSQL_TEST=true mix test test/mysql_test.exs --trace)",
      "Bash(MYSQL_TEST=true mix test test/mysql_test.exs)",
      "Bash(for:*)",
      "Bash(MSSQL_TEST=true mix test test/mssql_test.exs)",
      "Bash(SQLITE_TEST=true mix test test/driver_cast_syntax_test.exs:182 -t trace)",
      "Bash(SQLITE_TEST=true mix test test/driver_cast_syntax_test.exs:182 --trace)",
      "Bash(SQLITE_TEST=true mix test test/driver_cast_syntax_test.exs:182)",
      "Bash(FULL_TEST=true mix test test/driver_test.exs --trace)",
      "Bash(FULL_TEST=true mix test test/driver_test.exs:32)",
      "Bash(FULL_TEST=true mix test test/driver_test.exs --only postgres)",
      "Bash(./run-tests.sh:*)",
      "Bash(MIX_ENV=test mix test test/simple_select_test.exs --trace)",
      "Bash(FULL_TEST=true mix test test/postgresql_test.exs --trace)",
      "Bash(CI=true FULL_TEST=true MIX_ENV=test iex -S mix)",
      "Bash(MIX_ENV=test mix run -e \"IO.inspect(Application.get_env(:yesql, Yesql.TestRepo.Postgres))\")",
      "Bash(MIX_ENV=test mix run -e \"IO.inspect(Application.get_all_env(:yesql))\")",
      "Bash(MIX_ENV=test mix run -e \"IO.inspect(Application.get_env(:yesql, Yesql.TestRepo.Postgres), label: \"\"Postgres config\"\")\")",
      "Bash(gh workflow view:*)",
      "Bash(mix format:*)",
      "Bash(git reset:*)"
    ],
    "deny": []
  }
}