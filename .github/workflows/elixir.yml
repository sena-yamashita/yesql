name: Elixir CI

on:
  push:
    branches: [ "master", "main", "dev" ]
  pull_request:
    branches: [ "master", "main", "dev" ]

permissions:
  contents: read

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.14.5', '1.15.8', '1.16.3']
        otp: ['25.3', '26.2']
        exclude:
          - elixir: '1.14.5'
            otp: '26.2'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Compile project
      run: mix compile --warnings-as-errors
    
    - name: Run tests
      run: mix test

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.8'
        otp-version: '25.3'
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-quality-
          ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Run Credo
      run: mix credo --strict || true
    
    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused || true