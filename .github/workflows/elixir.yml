name: Elixir CI

on:
  push:
    branches: [ "master", "main", "dev" ]
  pull_request:
    branches: [ "master", "main", "dev" ]

permissions:
  contents: read

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.14.5', '1.15.8', '1.16.3']
        otp: ['25.3', '26.2']
        exclude:
          - elixir: '1.14.5'
            otp: '26.2'

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yesql_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: yesql_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong!Passw0rd
          MSSQL_PID: Express
        ports:
          - 1433:1433
        options: >-
          --health-cmd="echo 'Health check'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Compile project
      run: mix compile --warnings-as-errors
    
    - name: Install MSSQL tools
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
      continue-on-error: true
    
    - name: Setup MSSQL database
      run: |
        sleep 15
        /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "CREATE DATABASE yesql_test" -C || true
      continue-on-error: true
    
    - name: Run tests
      env:
        MIX_ENV: test
        CI: true
        FULL_TEST: true
        # PostgreSQL
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DATABASE: yesql_test
        # MySQL
        MYSQL_HOST: localhost
        MYSQL_PORT: 3306
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_DATABASE: yesql_test
        # MSSQL
        MSSQL_HOST: localhost
        MSSQL_PORT: 1433
        MSSQL_USER: sa
        MSSQL_PASSWORD: YourStrong!Passw0rd
        MSSQL_DATABASE: yesql_test
      run: mix test

  test-duckdb:
    name: Test with DuckDB
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.15.8']
        otp: ['25.3']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-duckdb-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-duckdb-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Compile project
      run: mix compile
    
    - name: Run DuckDB tests
      env:
        DUCKDB_TEST: "true"
      run: mix test test/duckdb_test.exs test/duckdb_column_test.exs

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.8'
        otp-version: '25.3'
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-quality-
          ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Run Credo
      run: mix credo --strict || true
    
    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused || true